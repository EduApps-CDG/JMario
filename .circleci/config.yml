
CircleCI HomeGo to app
Search Documentation
 Configuration
Language Guide: Android
This document describes how to set up an Android project on CircleCI in the following sections.

Sample Configuration
Config Walkthrough
Docker Images
Testing With Firebase Test Lab
Deployment
Troubleshooting
Handling Out Of Memory Errors
Deploying to Google Play Store
Overview
This guide provides an introduction to Android development on CircleCI. If you are looking for a .circleci/config.yml template for Android, see the Sample Configuration section of this document.

Note: Running the Android emulator is not supported by the type of virtualization CircleCI uses on Linux. To run emulator tests from a job, consider using an external service like Firebase Test Lab. For more details, see the Testing With Firebase Test Lab section below.

Prerequisites
This guide assumes the following:

You are using Gradle to build your Android project. Gradle is the default build tool for projects created with Android Studio.
Your project is located in the root of your VCS repository.
The projectâ€™s application is located in a subfolder named app.
Sample Configuration
version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
#      - run:
#         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
#         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

